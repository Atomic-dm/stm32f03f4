   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"system_stm32f0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	2
  19              		.global	SystemInit
  20              		.code	16
  21              		.thumb_func
  23              	SystemInit:
  24              	.LFB33:
  25              		.file 1 ".\\CMSIS/system_stm32f0xx.c"
   1:.\CMSIS/system_stm32f0xx.c **** /**
   2:.\CMSIS/system_stm32f0xx.c ****   ******************************************************************************
   3:.\CMSIS/system_stm32f0xx.c ****   * @file    system_stm32f0xx.c
   4:.\CMSIS/system_stm32f0xx.c ****   * @author  MCD Application Team
   5:.\CMSIS/system_stm32f0xx.c ****   * @version V1.4.0
   6:.\CMSIS/system_stm32f0xx.c ****   * @date    05-December-2014
   7:.\CMSIS/system_stm32f0xx.c ****   * @brief   CMSIS Cortex-M0 Device Peripheral Access Layer System Source File.
   8:.\CMSIS/system_stm32f0xx.c ****   *          This file contains the system clock configuration for STM32F0xx devices,
   9:.\CMSIS/system_stm32f0xx.c ****   *          and is generated by the clock configuration tool  
  10:.\CMSIS/system_stm32f0xx.c ****   *          STM32F0xx_Clock_Configuration_V1.0.0.xls
  11:.\CMSIS/system_stm32f0xx.c ****   *
  12:.\CMSIS/system_stm32f0xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:.\CMSIS/system_stm32f0xx.c ****   *     user application:
  14:.\CMSIS/system_stm32f0xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:.\CMSIS/system_stm32f0xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:.\CMSIS/system_stm32f0xx.c ****   *                      depending on the configuration made in the clock xls tool.
  17:.\CMSIS/system_stm32f0xx.c ****   *                      This function is called at startup just after reset and 
  18:.\CMSIS/system_stm32f0xx.c ****   *                      before branch to main program. This call is made inside
  19:.\CMSIS/system_stm32f0xx.c ****   *                      the "startup_stm32f0xx.s" file.
  20:.\CMSIS/system_stm32f0xx.c ****   *
  21:.\CMSIS/system_stm32f0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:.\CMSIS/system_stm32f0xx.c ****   *                                  by the user application to setup the SysTick 
  23:.\CMSIS/system_stm32f0xx.c ****   *                                  timer or configure other parameters.
  24:.\CMSIS/system_stm32f0xx.c ****   *
  25:.\CMSIS/system_stm32f0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:.\CMSIS/system_stm32f0xx.c ****   *                                 be called whenever the core clock is changed
  27:.\CMSIS/system_stm32f0xx.c ****   *                                 during program execution.
  28:.\CMSIS/system_stm32f0xx.c ****   *
  29:.\CMSIS/system_stm32f0xx.c ****   * 2. After each device reset the HSI (8 MHz Range) is used as system clock source.
  30:.\CMSIS/system_stm32f0xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f0xx.s" file, to
  31:.\CMSIS/system_stm32f0xx.c ****   *    configure the system clock before to branch to main program.
  32:.\CMSIS/system_stm32f0xx.c ****   *
  33:.\CMSIS/system_stm32f0xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:.\CMSIS/system_stm32f0xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:.\CMSIS/system_stm32f0xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:.\CMSIS/system_stm32f0xx.c ****   *
  37:.\CMSIS/system_stm32f0xx.c ****   * 4. The default value of HSE crystal is set to 8MHz, refer to "HSE_VALUE" define
  38:.\CMSIS/system_stm32f0xx.c ****   *    in "stm32f0xx.h" file. When HSE is used as system clock source, directly or
  39:.\CMSIS/system_stm32f0xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:.\CMSIS/system_stm32f0xx.c ****   *    value to your own configuration.
  41:.\CMSIS/system_stm32f0xx.c ****   *
  42:.\CMSIS/system_stm32f0xx.c ****   * 5. This file configures the system clock as follows:
  43:.\CMSIS/system_stm32f0xx.c ****   *=============================================================================
  44:.\CMSIS/system_stm32f0xx.c ****   *                         System Clock Configuration
  45:.\CMSIS/system_stm32f0xx.c ****   *=============================================================================
  46:.\CMSIS/system_stm32f0xx.c ****   *        System Clock source          | PLL(HSE)
  47:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  48:.\CMSIS/system_stm32f0xx.c ****   *        SYSCLK                       | 48000000 Hz
  49:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  50:.\CMSIS/system_stm32f0xx.c ****   *        HCLK                         | 48000000 Hz
  51:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  52:.\CMSIS/system_stm32f0xx.c ****   *        AHB Prescaler                | 1
  53:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  54:.\CMSIS/system_stm32f0xx.c ****   *        APB1 Prescaler               | 1
  55:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  56:.\CMSIS/system_stm32f0xx.c ****   *        APB2 Prescaler               | 1
  57:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  58:.\CMSIS/system_stm32f0xx.c ****   *        HSE Frequency                | 8000000 Hz
  59:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  60:.\CMSIS/system_stm32f0xx.c ****   *        PLL MUL                      | 6
  61:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  62:.\CMSIS/system_stm32f0xx.c ****   *        VDD                          | 3.3 V
  63:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  64:.\CMSIS/system_stm32f0xx.c ****   *        Flash Latency                | 1 WS
  65:.\CMSIS/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  66:.\CMSIS/system_stm32f0xx.c ****   *=============================================================================
  67:.\CMSIS/system_stm32f0xx.c ****   ******************************************************************************
  68:.\CMSIS/system_stm32f0xx.c ****   * @attention
  69:.\CMSIS/system_stm32f0xx.c ****   *
  70:.\CMSIS/system_stm32f0xx.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  71:.\CMSIS/system_stm32f0xx.c ****   *
  72:.\CMSIS/system_stm32f0xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  73:.\CMSIS/system_stm32f0xx.c ****   * You may not use this file except in compliance with the License.
  74:.\CMSIS/system_stm32f0xx.c ****   * You may obtain a copy of the License at:
  75:.\CMSIS/system_stm32f0xx.c ****   *
  76:.\CMSIS/system_stm32f0xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  77:.\CMSIS/system_stm32f0xx.c ****   *
  78:.\CMSIS/system_stm32f0xx.c ****   * Unless required by applicable law or agreed to in writing, software 
  79:.\CMSIS/system_stm32f0xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  80:.\CMSIS/system_stm32f0xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  81:.\CMSIS/system_stm32f0xx.c ****   * See the License for the specific language governing permissions and
  82:.\CMSIS/system_stm32f0xx.c ****   * limitations under the License.
  83:.\CMSIS/system_stm32f0xx.c ****   *
  84:.\CMSIS/system_stm32f0xx.c ****   ******************************************************************************
  85:.\CMSIS/system_stm32f0xx.c ****   */
  86:.\CMSIS/system_stm32f0xx.c **** 
  87:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup CMSIS
  88:.\CMSIS/system_stm32f0xx.c ****   * @{
  89:.\CMSIS/system_stm32f0xx.c ****   */
  90:.\CMSIS/system_stm32f0xx.c **** 
  91:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup stm32f0xx_system
  92:.\CMSIS/system_stm32f0xx.c ****   * @{
  93:.\CMSIS/system_stm32f0xx.c ****   */  
  94:.\CMSIS/system_stm32f0xx.c ****   
  95:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Includes
  96:.\CMSIS/system_stm32f0xx.c ****   * @{
  97:.\CMSIS/system_stm32f0xx.c ****   */
  98:.\CMSIS/system_stm32f0xx.c **** 
  99:.\CMSIS/system_stm32f0xx.c **** #include "stm32f0xx.h"
 100:.\CMSIS/system_stm32f0xx.c **** 
 101:.\CMSIS/system_stm32f0xx.c **** /**
 102:.\CMSIS/system_stm32f0xx.c ****   * @}
 103:.\CMSIS/system_stm32f0xx.c ****   */
 104:.\CMSIS/system_stm32f0xx.c **** 
 105:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_TypesDefinitions
 106:.\CMSIS/system_stm32f0xx.c ****   * @{
 107:.\CMSIS/system_stm32f0xx.c ****   */
 108:.\CMSIS/system_stm32f0xx.c **** 
 109:.\CMSIS/system_stm32f0xx.c **** /**
 110:.\CMSIS/system_stm32f0xx.c ****   * @}
 111:.\CMSIS/system_stm32f0xx.c ****   */
 112:.\CMSIS/system_stm32f0xx.c **** 
 113:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Defines
 114:.\CMSIS/system_stm32f0xx.c ****   * @{
 115:.\CMSIS/system_stm32f0xx.c ****   */
 116:.\CMSIS/system_stm32f0xx.c **** /**
 117:.\CMSIS/system_stm32f0xx.c ****   * @}
 118:.\CMSIS/system_stm32f0xx.c ****   */
 119:.\CMSIS/system_stm32f0xx.c **** 
 120:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Macros
 121:.\CMSIS/system_stm32f0xx.c ****   * @{
 122:.\CMSIS/system_stm32f0xx.c ****   */
 123:.\CMSIS/system_stm32f0xx.c **** 
 124:.\CMSIS/system_stm32f0xx.c **** /**
 125:.\CMSIS/system_stm32f0xx.c ****   * @}
 126:.\CMSIS/system_stm32f0xx.c ****   */
 127:.\CMSIS/system_stm32f0xx.c **** 
 128:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Variables
 129:.\CMSIS/system_stm32f0xx.c ****   * @{
 130:.\CMSIS/system_stm32f0xx.c ****   */
 131:.\CMSIS/system_stm32f0xx.c **** uint32_t SystemCoreClock    = 48000000;
 132:.\CMSIS/system_stm32f0xx.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 133:.\CMSIS/system_stm32f0xx.c **** 
 134:.\CMSIS/system_stm32f0xx.c **** /**
 135:.\CMSIS/system_stm32f0xx.c ****   * @}
 136:.\CMSIS/system_stm32f0xx.c ****   */
 137:.\CMSIS/system_stm32f0xx.c **** 
 138:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_FunctionPrototypes
 139:.\CMSIS/system_stm32f0xx.c ****   * @{
 140:.\CMSIS/system_stm32f0xx.c ****   */
 141:.\CMSIS/system_stm32f0xx.c **** 
 142:.\CMSIS/system_stm32f0xx.c **** static void SetSysClock(void);
 143:.\CMSIS/system_stm32f0xx.c **** 
 144:.\CMSIS/system_stm32f0xx.c **** /**
 145:.\CMSIS/system_stm32f0xx.c ****   * @}
 146:.\CMSIS/system_stm32f0xx.c ****   */
 147:.\CMSIS/system_stm32f0xx.c **** 
 148:.\CMSIS/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Functions
 149:.\CMSIS/system_stm32f0xx.c ****   * @{
 150:.\CMSIS/system_stm32f0xx.c ****   */
 151:.\CMSIS/system_stm32f0xx.c **** 
 152:.\CMSIS/system_stm32f0xx.c **** /**
 153:.\CMSIS/system_stm32f0xx.c ****   * @brief  Setup the microcontroller system.
 154:.\CMSIS/system_stm32f0xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 155:.\CMSIS/system_stm32f0xx.c ****   *         SystemCoreClock variable.
 156:.\CMSIS/system_stm32f0xx.c ****   * @param  None
 157:.\CMSIS/system_stm32f0xx.c ****   * @retval None
 158:.\CMSIS/system_stm32f0xx.c ****   */
 159:.\CMSIS/system_stm32f0xx.c **** void SystemInit (void)
 160:.\CMSIS/system_stm32f0xx.c **** {    
  26              		.loc 1 160 0
  27              		.cfi_startproc
  28 0000 82B0     		sub	sp, sp, #8
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
 161:.\CMSIS/system_stm32f0xx.c ****   /* Set HSION bit */
 162:.\CMSIS/system_stm32f0xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  31              		.loc 1 162 0
  32 0002 394B     		ldr	r3, .L12
  33 0004 1A68     		ldr	r2, [r3]
  34 0006 0121     		mov	r1, #1
  35 0008 0A43     		orr	r2, r1
  36 000a 1A60     		str	r2, [r3]
 163:.\CMSIS/system_stm32f0xx.c **** 
 164:.\CMSIS/system_stm32f0xx.c **** #if defined(STM32F051)  
 165:.\CMSIS/system_stm32f0xx.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
 166:.\CMSIS/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0xF8FFB80C;
 167:.\CMSIS/system_stm32f0xx.c **** #else
 168:.\CMSIS/system_stm32f0xx.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE, MCOSEL[2:0], MCOPRE[2:0] and PLLNODIV bits */
 169:.\CMSIS/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0x08FFB80C;
  37              		.loc 1 169 0
  38 000c 5868     		ldr	r0, [r3, #4]
  39 000e 374A     		ldr	r2, .L12+4
  40 0010 0240     		and	r2, r0
  41 0012 5A60     		str	r2, [r3, #4]
 170:.\CMSIS/system_stm32f0xx.c **** #endif /* STM32F051 */
 171:.\CMSIS/system_stm32f0xx.c ****   
 172:.\CMSIS/system_stm32f0xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 173:.\CMSIS/system_stm32f0xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  42              		.loc 1 173 0
  43 0014 1868     		ldr	r0, [r3]
  44 0016 364A     		ldr	r2, .L12+8
  45 0018 0240     		and	r2, r0
  46 001a 1A60     		str	r2, [r3]
 174:.\CMSIS/system_stm32f0xx.c **** 
 175:.\CMSIS/system_stm32f0xx.c ****   /* Reset HSEBYP bit */
 176:.\CMSIS/system_stm32f0xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  47              		.loc 1 176 0
  48 001c 1868     		ldr	r0, [r3]
  49 001e 354A     		ldr	r2, .L12+12
  50 0020 0240     		and	r2, r0
  51 0022 1A60     		str	r2, [r3]
 177:.\CMSIS/system_stm32f0xx.c **** 
 178:.\CMSIS/system_stm32f0xx.c ****   /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 179:.\CMSIS/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0xFFC0FFFF;
  52              		.loc 1 179 0
  53 0024 5868     		ldr	r0, [r3, #4]
  54 0026 344A     		ldr	r2, .L12+16
  55 0028 0240     		and	r2, r0
  56 002a 5A60     		str	r2, [r3, #4]
 180:.\CMSIS/system_stm32f0xx.c **** 
 181:.\CMSIS/system_stm32f0xx.c ****   /* Reset PREDIV1[3:0] bits */
 182:.\CMSIS/system_stm32f0xx.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
  57              		.loc 1 182 0
  58 002c DA6A     		ldr	r2, [r3, #44]
  59 002e 0F20     		mov	r0, #15
  60 0030 8243     		bic	r2, r0
  61 0032 DA62     		str	r2, [r3, #44]
 183:.\CMSIS/system_stm32f0xx.c **** 
 184:.\CMSIS/system_stm32f0xx.c ****   /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
 185:.\CMSIS/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;
  62              		.loc 1 185 0
  63 0034 186B     		ldr	r0, [r3, #48]
  64 0036 314A     		ldr	r2, .L12+20
  65 0038 0240     		and	r2, r0
  66 003a 1A63     		str	r2, [r3, #48]
 186:.\CMSIS/system_stm32f0xx.c **** 
 187:.\CMSIS/system_stm32f0xx.c ****   /* Reset HSI14 bit */
 188:.\CMSIS/system_stm32f0xx.c ****   RCC->CR2 &= (uint32_t)0xFFFFFFFE;
  67              		.loc 1 188 0
  68 003c 5A6B     		ldr	r2, [r3, #52]
  69 003e 8A43     		bic	r2, r1
  70 0040 5A63     		str	r2, [r3, #52]
 189:.\CMSIS/system_stm32f0xx.c **** 
 190:.\CMSIS/system_stm32f0xx.c ****   /* Disable all interrupts */
 191:.\CMSIS/system_stm32f0xx.c ****   RCC->CIR = 0x00000000;
  71              		.loc 1 191 0
  72 0042 0022     		mov	r2, #0
  73 0044 9A60     		str	r2, [r3, #8]
  74              	.LBB4:
  75              	.LBB5:
 192:.\CMSIS/system_stm32f0xx.c **** 
 193:.\CMSIS/system_stm32f0xx.c ****   /* Configure the System clock frequency, AHB/APBx prescalers and Flash settings */
 194:.\CMSIS/system_stm32f0xx.c ****   SetSysClock();
 195:.\CMSIS/system_stm32f0xx.c **** }
 196:.\CMSIS/system_stm32f0xx.c **** 
 197:.\CMSIS/system_stm32f0xx.c **** /**
 198:.\CMSIS/system_stm32f0xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 199:.\CMSIS/system_stm32f0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 200:.\CMSIS/system_stm32f0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 201:.\CMSIS/system_stm32f0xx.c ****   *         other parameters.
 202:.\CMSIS/system_stm32f0xx.c ****   *
 203:.\CMSIS/system_stm32f0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 204:.\CMSIS/system_stm32f0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 205:.\CMSIS/system_stm32f0xx.c ****   *         based on this variable will be incorrect.         
 206:.\CMSIS/system_stm32f0xx.c ****   *
 207:.\CMSIS/system_stm32f0xx.c ****   * @note   - The system frequency computed by this function is not the real 
 208:.\CMSIS/system_stm32f0xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 209:.\CMSIS/system_stm32f0xx.c ****   *           constant and the selected clock source:
 210:.\CMSIS/system_stm32f0xx.c ****   *
 211:.\CMSIS/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 212:.\CMSIS/system_stm32f0xx.c ****   *                                              
 213:.\CMSIS/system_stm32f0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 214:.\CMSIS/system_stm32f0xx.c ****   *                          
 215:.\CMSIS/system_stm32f0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 216:.\CMSIS/system_stm32f0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 217:.\CMSIS/system_stm32f0xx.c ****   *
 218:.\CMSIS/system_stm32f0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx.h file (default value
 219:.\CMSIS/system_stm32f0xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 220:.\CMSIS/system_stm32f0xx.c ****   *             in voltage and temperature.
 221:.\CMSIS/system_stm32f0xx.c ****   *
 222:.\CMSIS/system_stm32f0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx.h file (default value
 223:.\CMSIS/system_stm32f0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 224:.\CMSIS/system_stm32f0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 225:.\CMSIS/system_stm32f0xx.c ****   *              have wrong result.
 226:.\CMSIS/system_stm32f0xx.c ****   *
 227:.\CMSIS/system_stm32f0xx.c ****   *         - The result of this function could be not correct when using fractional
 228:.\CMSIS/system_stm32f0xx.c ****   *           value for HSE crystal.
 229:.\CMSIS/system_stm32f0xx.c ****   * @param  None
 230:.\CMSIS/system_stm32f0xx.c ****   * @retval None
 231:.\CMSIS/system_stm32f0xx.c ****   */
 232:.\CMSIS/system_stm32f0xx.c **** void SystemCoreClockUpdate (void)
 233:.\CMSIS/system_stm32f0xx.c **** {
 234:.\CMSIS/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;
 235:.\CMSIS/system_stm32f0xx.c **** 
 236:.\CMSIS/system_stm32f0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 237:.\CMSIS/system_stm32f0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 238:.\CMSIS/system_stm32f0xx.c ****   
 239:.\CMSIS/system_stm32f0xx.c ****   switch (tmp)
 240:.\CMSIS/system_stm32f0xx.c ****   {
 241:.\CMSIS/system_stm32f0xx.c ****     case 0x00:  /* HSI used as system clock */
 242:.\CMSIS/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 243:.\CMSIS/system_stm32f0xx.c ****       break;
 244:.\CMSIS/system_stm32f0xx.c ****     case 0x04:  /* HSE used as system clock */
 245:.\CMSIS/system_stm32f0xx.c ****       SystemCoreClock = HSE_VALUE;
 246:.\CMSIS/system_stm32f0xx.c ****       break;
 247:.\CMSIS/system_stm32f0xx.c ****     case 0x08:  /* PLL used as system clock */
 248:.\CMSIS/system_stm32f0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 249:.\CMSIS/system_stm32f0xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 250:.\CMSIS/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 251:.\CMSIS/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 252:.\CMSIS/system_stm32f0xx.c ****       
 253:.\CMSIS/system_stm32f0xx.c ****       if (pllsource == 0x00)
 254:.\CMSIS/system_stm32f0xx.c ****       {
 255:.\CMSIS/system_stm32f0xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 256:.\CMSIS/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 257:.\CMSIS/system_stm32f0xx.c ****       }
 258:.\CMSIS/system_stm32f0xx.c ****       else
 259:.\CMSIS/system_stm32f0xx.c ****       {
 260:.\CMSIS/system_stm32f0xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 261:.\CMSIS/system_stm32f0xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 262:.\CMSIS/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 263:.\CMSIS/system_stm32f0xx.c ****       }      
 264:.\CMSIS/system_stm32f0xx.c ****       break;
 265:.\CMSIS/system_stm32f0xx.c ****     default: /* HSI used as system clock */
 266:.\CMSIS/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 267:.\CMSIS/system_stm32f0xx.c ****       break;
 268:.\CMSIS/system_stm32f0xx.c ****   }
 269:.\CMSIS/system_stm32f0xx.c ****   /* Compute HCLK clock frequency ----------------*/
 270:.\CMSIS/system_stm32f0xx.c ****   /* Get HCLK prescaler */
 271:.\CMSIS/system_stm32f0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 272:.\CMSIS/system_stm32f0xx.c ****   /* HCLK clock frequency */
 273:.\CMSIS/system_stm32f0xx.c ****   SystemCoreClock >>= tmp;  
 274:.\CMSIS/system_stm32f0xx.c **** }
 275:.\CMSIS/system_stm32f0xx.c **** 
 276:.\CMSIS/system_stm32f0xx.c **** /**
 277:.\CMSIS/system_stm32f0xx.c ****   * @brief  Configures the System clock frequency, AHB/APBx prescalers and Flash
 278:.\CMSIS/system_stm32f0xx.c ****   *         settings.
 279:.\CMSIS/system_stm32f0xx.c ****   * @note   This function should be called only once the RCC clock configuration
 280:.\CMSIS/system_stm32f0xx.c ****   *         is reset to the default reset state (done in SystemInit() function).
 281:.\CMSIS/system_stm32f0xx.c ****   * @param  None
 282:.\CMSIS/system_stm32f0xx.c ****   * @retval None
 283:.\CMSIS/system_stm32f0xx.c ****   */
 284:.\CMSIS/system_stm32f0xx.c **** static void SetSysClock(void)
 285:.\CMSIS/system_stm32f0xx.c **** {
 286:.\CMSIS/system_stm32f0xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  76              		.loc 1 286 0
  77 0046 0092     		str	r2, [sp]
  78 0048 0192     		str	r2, [sp, #4]
 287:.\CMSIS/system_stm32f0xx.c ****   
 288:.\CMSIS/system_stm32f0xx.c ****   /* SYSCLK, HCLK, PCLK configuration ----------------------------------------*/
 289:.\CMSIS/system_stm32f0xx.c ****   /* Enable HSE */    
 290:.\CMSIS/system_stm32f0xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  79              		.loc 1 290 0
  80 004a 1A68     		ldr	r2, [r3]
  81 004c 8021     		mov	r1, #128
  82 004e 4902     		lsl	r1, r1, #9
  83 0050 0A43     		orr	r2, r1
  84 0052 1A60     		str	r2, [r3]
 291:.\CMSIS/system_stm32f0xx.c ****  
 292:.\CMSIS/system_stm32f0xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 293:.\CMSIS/system_stm32f0xx.c ****   do
 294:.\CMSIS/system_stm32f0xx.c ****   {
 295:.\CMSIS/system_stm32f0xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  85              		.loc 1 295 0
  86 0054 191C     		mov	r1, r3
  87 0056 8022     		mov	r2, #128
  88 0058 9202     		lsl	r2, r2, #10
 296:.\CMSIS/system_stm32f0xx.c ****     StartUpCounter++;  
 297:.\CMSIS/system_stm32f0xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
  89              		.loc 1 297 0
  90 005a A020     		mov	r0, #160
  91 005c C001     		lsl	r0, r0, #7
  92              	.L3:
 295:.\CMSIS/system_stm32f0xx.c ****     StartUpCounter++;  
  93              		.loc 1 295 0
  94 005e 0B68     		ldr	r3, [r1]
  95 0060 1340     		and	r3, r2
  96 0062 0193     		str	r3, [sp, #4]
 296:.\CMSIS/system_stm32f0xx.c ****     StartUpCounter++;  
  97              		.loc 1 296 0
  98 0064 009B     		ldr	r3, [sp]
  99 0066 0133     		add	r3, r3, #1
 100 0068 0093     		str	r3, [sp]
 101              		.loc 1 297 0
 102 006a 019B     		ldr	r3, [sp, #4]
 103 006c 002B     		cmp	r3, #0
 104 006e 02D1     		bne	.L2
 105 0070 009B     		ldr	r3, [sp]
 106 0072 8342     		cmp	r3, r0
 107 0074 F3D1     		bne	.L3
 108              	.L2:
 298:.\CMSIS/system_stm32f0xx.c **** 
 299:.\CMSIS/system_stm32f0xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 109              		.loc 1 299 0
 110 0076 1C4B     		ldr	r3, .L12
 111 0078 1B68     		ldr	r3, [r3]
 112 007a 9B03     		lsl	r3, r3, #14
 113 007c 02D5     		bpl	.L4
 300:.\CMSIS/system_stm32f0xx.c ****   {
 301:.\CMSIS/system_stm32f0xx.c ****     HSEStatus = (uint32_t)0x01;
 114              		.loc 1 301 0
 115 007e 0123     		mov	r3, #1
 116 0080 0193     		str	r3, [sp, #4]
 117 0082 01E0     		b	.L5
 118              	.L4:
 302:.\CMSIS/system_stm32f0xx.c ****   }
 303:.\CMSIS/system_stm32f0xx.c ****   else
 304:.\CMSIS/system_stm32f0xx.c ****   {
 305:.\CMSIS/system_stm32f0xx.c ****     HSEStatus = (uint32_t)0x00;
 119              		.loc 1 305 0
 120 0084 0023     		mov	r3, #0
 121 0086 0193     		str	r3, [sp, #4]
 122              	.L5:
 306:.\CMSIS/system_stm32f0xx.c ****   }  
 307:.\CMSIS/system_stm32f0xx.c **** 
 308:.\CMSIS/system_stm32f0xx.c ****   if (HSEStatus == (uint32_t)0x01)
 123              		.loc 1 308 0
 124 0088 019B     		ldr	r3, [sp, #4]
 125 008a 012B     		cmp	r3, #1
 126 008c 2AD1     		bne	.L1
 309:.\CMSIS/system_stm32f0xx.c ****   {
 310:.\CMSIS/system_stm32f0xx.c ****     /* Enable Prefetch Buffer and set Flash Latency */
 311:.\CMSIS/system_stm32f0xx.c ****     FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 127              		.loc 1 311 0
 128 008e 1122     		mov	r2, #17
 129 0090 1B4B     		ldr	r3, .L12+24
 130 0092 1A60     		str	r2, [r3]
 312:.\CMSIS/system_stm32f0xx.c ****  
 313:.\CMSIS/system_stm32f0xx.c ****     /* HCLK = SYSCLK */
 314:.\CMSIS/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 131              		.loc 1 314 0
 132 0094 144B     		ldr	r3, .L12
 133 0096 5A68     		ldr	r2, [r3, #4]
 134 0098 5A60     		str	r2, [r3, #4]
 315:.\CMSIS/system_stm32f0xx.c ****       
 316:.\CMSIS/system_stm32f0xx.c ****     /* PCLK = HCLK */
 317:.\CMSIS/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 135              		.loc 1 317 0
 136 009a 5A68     		ldr	r2, [r3, #4]
 137 009c 5A60     		str	r2, [r3, #4]
 318:.\CMSIS/system_stm32f0xx.c **** 
 319:.\CMSIS/system_stm32f0xx.c ****     /* PLL configuration = HSE * 6 = 48 MHz */
 320:.\CMSIS/system_stm32f0xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 138              		.loc 1 320 0
 139 009e 5968     		ldr	r1, [r3, #4]
 140 00a0 184A     		ldr	r2, .L12+28
 141 00a2 0A40     		and	r2, r1
 142 00a4 5A60     		str	r2, [r3, #4]
 321:.\CMSIS/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL6
 143              		.loc 1 321 0
 144 00a6 5A68     		ldr	r2, [r3, #4]
 145 00a8 8821     		mov	r1, #136
 146 00aa 4903     		lsl	r1, r1, #13
 147 00ac 0A43     		orr	r2, r1
 148 00ae 5A60     		str	r2, [r3, #4]
 322:.\CMSIS/system_stm32f0xx.c ****             
 323:.\CMSIS/system_stm32f0xx.c ****     /* Enable PLL */
 324:.\CMSIS/system_stm32f0xx.c ****     RCC->CR |= RCC_CR_PLLON;
 149              		.loc 1 324 0
 150 00b0 1A68     		ldr	r2, [r3]
 151 00b2 8021     		mov	r1, #128
 152 00b4 4904     		lsl	r1, r1, #17
 153 00b6 0A43     		orr	r2, r1
 154 00b8 1A60     		str	r2, [r3]
 325:.\CMSIS/system_stm32f0xx.c **** 
 326:.\CMSIS/system_stm32f0xx.c ****     /* Wait till PLL is ready */
 327:.\CMSIS/system_stm32f0xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 155              		.loc 1 327 0
 156 00ba 191C     		mov	r1, r3
 157 00bc 8022     		mov	r2, #128
 158 00be 9204     		lsl	r2, r2, #18
 159              	.L7:
 160 00c0 0B68     		ldr	r3, [r1]
 161 00c2 1342     		tst	r3, r2
 162 00c4 FCD0     		beq	.L7
 328:.\CMSIS/system_stm32f0xx.c ****     {
 329:.\CMSIS/system_stm32f0xx.c ****     }
 330:.\CMSIS/system_stm32f0xx.c **** 
 331:.\CMSIS/system_stm32f0xx.c ****     /* Select PLL as system clock source */
 332:.\CMSIS/system_stm32f0xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 163              		.loc 1 332 0
 164 00c6 084B     		ldr	r3, .L12
 165 00c8 5A68     		ldr	r2, [r3, #4]
 166 00ca 0321     		mov	r1, #3
 167 00cc 8A43     		bic	r2, r1
 168 00ce 5A60     		str	r2, [r3, #4]
 333:.\CMSIS/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 169              		.loc 1 333 0
 170 00d0 5968     		ldr	r1, [r3, #4]
 171 00d2 0222     		mov	r2, #2
 172 00d4 0A43     		orr	r2, r1
 173 00d6 5A60     		str	r2, [r3, #4]
 334:.\CMSIS/system_stm32f0xx.c **** 
 335:.\CMSIS/system_stm32f0xx.c ****     /* Wait till PLL is used as system clock source */
 336:.\CMSIS/system_stm32f0xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 174              		.loc 1 336 0
 175 00d8 191C     		mov	r1, r3
 176 00da 0C22     		mov	r2, #12
 177              	.L8:
 178 00dc 4B68     		ldr	r3, [r1, #4]
 179 00de 1340     		and	r3, r2
 180 00e0 082B     		cmp	r3, #8
 181 00e2 FBD1     		bne	.L8
 182              	.L1:
 183              	.LBE5:
 184              	.LBE4:
 195:.\CMSIS/system_stm32f0xx.c **** 
 185              		.loc 1 195 0
 186 00e4 02B0     		add	sp, sp, #8
 187              		@ sp needed
 188 00e6 7047     		bx	lr
 189              	.L13:
 190              		.align	2
 191              	.L12:
 192 00e8 00100240 		.word	1073876992
 193 00ec 0CB8FF08 		.word	150976524
 194 00f0 FFFFF6FE 		.word	-17367041
 195 00f4 FFFFFBFF 		.word	-262145
 196 00f8 FFFFC0FF 		.word	-4128769
 197 00fc ACFEFFFF 		.word	-340
 198 0100 00200240 		.word	1073881088
 199 0104 FF7FC0FF 		.word	-4161537
 200              		.cfi_endproc
 201              	.LFE33:
 203              		.global	__aeabi_uidiv
 204              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 205              		.align	2
 206              		.global	SystemCoreClockUpdate
 207              		.code	16
 208              		.thumb_func
 210              	SystemCoreClockUpdate:
 211              	.LFB34:
 233:.\CMSIS/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;
 212              		.loc 1 233 0
 213              		.cfi_startproc
 214 0000 10B5     		push	{r4, lr}
 215              	.LCFI1:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 4, -8
 218              		.cfi_offset 14, -4
 219              	.LVL0:
 237:.\CMSIS/system_stm32f0xx.c ****   
 220              		.loc 1 237 0
 221 0002 1E4B     		ldr	r3, .L22
 222 0004 5B68     		ldr	r3, [r3, #4]
 223              	.LVL1:
 224 0006 0C22     		mov	r2, #12
 225 0008 1340     		and	r3, r2
 226              	.LVL2:
 239:.\CMSIS/system_stm32f0xx.c ****   {
 227              		.loc 1 239 0
 228 000a 042B     		cmp	r3, #4
 229 000c 07D0     		beq	.L16
 230 000e 082B     		cmp	r3, #8
 231 0010 09D0     		beq	.L17
 232 0012 002B     		cmp	r3, #0
 233 0014 22D1     		bne	.L21
 242:.\CMSIS/system_stm32f0xx.c ****       break;
 234              		.loc 1 242 0
 235 0016 1A4A     		ldr	r2, .L22+4
 236 0018 1A4B     		ldr	r3, .L22+8
 237              	.LVL3:
 238 001a 1A60     		str	r2, [r3]
 243:.\CMSIS/system_stm32f0xx.c ****     case 0x04:  /* HSE used as system clock */
 239              		.loc 1 243 0
 240 001c 21E0     		b	.L19
 241              	.LVL4:
 242              	.L16:
 245:.\CMSIS/system_stm32f0xx.c ****       break;
 243              		.loc 1 245 0
 244 001e 184A     		ldr	r2, .L22+4
 245 0020 184B     		ldr	r3, .L22+8
 246              	.LVL5:
 247 0022 1A60     		str	r2, [r3]
 246:.\CMSIS/system_stm32f0xx.c ****     case 0x08:  /* PLL used as system clock */
 248              		.loc 1 246 0
 249 0024 1DE0     		b	.L19
 250              	.LVL6:
 251              	.L17:
 249:.\CMSIS/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 252              		.loc 1 249 0
 253 0026 154B     		ldr	r3, .L22
 254              	.LVL7:
 255 0028 5C68     		ldr	r4, [r3, #4]
 256              	.LVL8:
 250:.\CMSIS/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 257              		.loc 1 250 0
 258 002a 5A68     		ldr	r2, [r3, #4]
 259              	.LVL9:
 249:.\CMSIS/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 260              		.loc 1 249 0
 261 002c A402     		lsl	r4, r4, #10
 262              	.LVL10:
 251:.\CMSIS/system_stm32f0xx.c ****       
 263              		.loc 1 251 0
 264 002e 240F     		lsr	r4, r4, #28
 265 0030 0234     		add	r4, r4, #2
 266              	.LVL11:
 253:.\CMSIS/system_stm32f0xx.c ****       {
 267              		.loc 1 253 0
 268 0032 C023     		mov	r3, #192
 269 0034 5B02     		lsl	r3, r3, #9
 270 0036 1A42     		tst	r2, r3
 271 0038 04D1     		bne	.L20
 256:.\CMSIS/system_stm32f0xx.c ****       }
 272              		.loc 1 256 0
 273 003a 1348     		ldr	r0, .L22+12
 274 003c 4443     		mul	r4, r0
 275              	.LVL12:
 276 003e 114B     		ldr	r3, .L22+8
 277 0040 1C60     		str	r4, [r3]
 278 0042 0EE0     		b	.L19
 279              	.LVL13:
 280              	.L20:
 260:.\CMSIS/system_stm32f0xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 281              		.loc 1 260 0
 282 0044 0D4B     		ldr	r3, .L22
 283 0046 DB6A     		ldr	r3, [r3, #44]
 284              	.LVL14:
 285 0048 0F21     		mov	r1, #15
 286 004a 1940     		and	r1, r3
 287 004c 0131     		add	r1, r1, #1
 288              	.LVL15:
 262:.\CMSIS/system_stm32f0xx.c ****       }      
 289              		.loc 1 262 0
 290 004e 0C48     		ldr	r0, .L22+4
 291 0050 FFF7FEFF 		bl	__aeabi_uidiv
 292              	.LVL16:
 293 0054 4443     		mul	r4, r0
 294              	.LVL17:
 295 0056 0B4B     		ldr	r3, .L22+8
 296 0058 1C60     		str	r4, [r3]
 297 005a 02E0     		b	.L19
 298              	.LVL18:
 299              	.L21:
 266:.\CMSIS/system_stm32f0xx.c ****       break;
 300              		.loc 1 266 0
 301 005c 084A     		ldr	r2, .L22+4
 302 005e 094B     		ldr	r3, .L22+8
 303              	.LVL19:
 304 0060 1A60     		str	r2, [r3]
 305              	.LVL20:
 306              	.L19:
 271:.\CMSIS/system_stm32f0xx.c ****   /* HCLK clock frequency */
 307              		.loc 1 271 0
 308 0062 064B     		ldr	r3, .L22
 309 0064 5B68     		ldr	r3, [r3, #4]
 310 0066 1B06     		lsl	r3, r3, #24
 311 0068 1B0F     		lsr	r3, r3, #28
 312 006a 084A     		ldr	r2, .L22+16
 313 006c D35C     		ldrb	r3, [r2, r3]
 314 006e DBB2     		uxtb	r3, r3
 315              	.LVL21:
 273:.\CMSIS/system_stm32f0xx.c **** }
 316              		.loc 1 273 0
 317 0070 044A     		ldr	r2, .L22+8
 318 0072 1168     		ldr	r1, [r2]
 319 0074 D940     		lsr	r1, r1, r3
 320 0076 1160     		str	r1, [r2]
 274:.\CMSIS/system_stm32f0xx.c **** 
 321              		.loc 1 274 0
 322              		@ sp needed
 323 0078 10BD     		pop	{r4, pc}
 324              	.L23:
 325 007a C046     		.align	2
 326              	.L22:
 327 007c 00100240 		.word	1073876992
 328 0080 00127A00 		.word	8000000
 329 0084 00000000 		.word	.LANCHOR0
 330 0088 00093D00 		.word	4000000
 331 008c 00000000 		.word	.LANCHOR1
 332              		.cfi_endproc
 333              	.LFE34:
 335              		.global	AHBPrescTable
 336              		.global	SystemCoreClock
 337              		.section	.data.AHBPrescTable,"aw",%progbits
 338              		.align	2
 339              		.set	.LANCHOR1,. + 0
 342              	AHBPrescTable:
 343 0000 00       		.byte	0
 344 0001 00       		.byte	0
 345 0002 00       		.byte	0
 346 0003 00       		.byte	0
 347 0004 00       		.byte	0
 348 0005 00       		.byte	0
 349 0006 00       		.byte	0
 350 0007 00       		.byte	0
 351 0008 01       		.byte	1
 352 0009 02       		.byte	2
 353 000a 03       		.byte	3
 354 000b 04       		.byte	4
 355 000c 06       		.byte	6
 356 000d 07       		.byte	7
 357 000e 08       		.byte	8
 358 000f 09       		.byte	9
 359              		.section	.data.SystemCoreClock,"aw",%progbits
 360              		.align	2
 361              		.set	.LANCHOR0,. + 0
 364              	SystemCoreClock:
 365 0000 006CDC02 		.word	48000000
 366              		.text
 367              	.Letext0:
 368              		.file 2 "c:\\myprograms\\sublime text build 3126\\gnu tools arm embedded\\arm-none-eabi\\include\\
 369              		.file 3 "c:\\myprograms\\sublime text build 3126\\gnu tools arm embedded\\arm-none-eabi\\include\\
 370              		.file 4 ".\\CMSIS/stm32f0xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f0xx.c
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:18     .text.SystemInit:00000000 $t
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:23     .text.SystemInit:00000000 SystemInit
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:192    .text.SystemInit:000000e8 $d
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:205    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:210    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:327    .text.SystemCoreClockUpdate:0000007c $d
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:342    .data.AHBPrescTable:00000000 AHBPrescTable
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:364    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:338    .data.AHBPrescTable:00000000 $d
C:\Users\Dima\AppData\Local\Temp\cczG6ikl.s:360    .data.SystemCoreClock:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
